var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Injectable } from '@angular/core';
import { saveAs } from 'file-saver';
import * as i0 from "@angular/core";
let FileSaverService = class FileSaverService {
    get isFileSaverSupported() {
        try {
            return !!new Blob();
        }
        catch (e) {
            return false;
        }
    }
    genType(fileName) {
        if (!fileName || fileName.lastIndexOf('.') === -1) {
            return 'text/plain';
        }
        const type = fileName.substr(fileName.lastIndexOf('.') + 1);
        switch (type) {
            case 'txt':
                return 'text/plain';
            case 'xml':
            case 'html':
                return `text/${type}`;
            case 'json':
                return 'octet/stream';
            default:
                return `application/${type}`;
        }
    }
    save(blob, fileName, filtType, option) {
        if (!blob) {
            throw new Error('Data argument should be a blob instance');
        }
        const file = new Blob([blob], { type: filtType || blob.type || this.genType(fileName) });
        saveAs(file, decodeURI(fileName || 'download'), option);
    }
    saveText(txt, fileName, option) {
        const blob = new Blob([txt]);
        this.save(blob, fileName, null, option);
    }
};
FileSaverService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function FileSaverService_Factory() { return new FileSaverService(); }, token: FileSaverService, providedIn: "root" });
FileSaverService = __decorate([
    Injectable({ providedIn: 'root' })
], FileSaverService);
export { FileSaverService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXNhdmVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZmlsZXNhdmVyLyIsInNvdXJjZXMiOlsic3JjL2ZpbGVzYXZlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE1BQU0sRUFBb0IsTUFBTSxZQUFZLENBQUM7O0FBR3RELElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWdCO0lBQzNCLElBQUksb0JBQW9CO1FBQ3RCLElBQUk7WUFDRixPQUFPLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDO1NBQ3JCO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixPQUFPLEtBQUssQ0FBQztTQUNkO0lBQ0gsQ0FBQztJQUVELE9BQU8sQ0FBQyxRQUFpQjtRQUN2QixJQUFJLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDakQsT0FBTyxZQUFZLENBQUM7U0FDckI7UUFDRCxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDNUQsUUFBUSxJQUFJLEVBQUU7WUFDWixLQUFLLEtBQUs7Z0JBQ1IsT0FBTyxZQUFZLENBQUM7WUFDdEIsS0FBSyxLQUFLLENBQUM7WUFDWCxLQUFLLE1BQU07Z0JBQ1QsT0FBTyxRQUFRLElBQUksRUFBRSxDQUFDO1lBQ3hCLEtBQUssTUFBTTtnQkFDVCxPQUFPLGNBQWMsQ0FBQztZQUN4QjtnQkFDRSxPQUFPLGVBQWUsSUFBSSxFQUFFLENBQUM7U0FDaEM7SUFDSCxDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVUsRUFBRSxRQUFpQixFQUFFLFFBQWlCLEVBQUUsTUFBeUI7UUFDOUUsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNULE1BQU0sSUFBSSxLQUFLLENBQUMseUNBQXlDLENBQUMsQ0FBQztTQUM1RDtRQUVELE1BQU0sSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDekYsTUFBTSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsUUFBUSxJQUFJLFVBQVUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFFRCxRQUFRLENBQUMsR0FBVyxFQUFFLFFBQWlCLEVBQUUsTUFBeUI7UUFDaEUsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDMUMsQ0FBQztDQUNGLENBQUE7O0FBeENZLGdCQUFnQjtJQUQ1QixVQUFVLENBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLENBQUM7R0FDdEIsZ0JBQWdCLENBd0M1QjtTQXhDWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzYXZlQXMsIEZpbGVTYXZlck9wdGlvbnMgfSBmcm9tICdmaWxlLXNhdmVyJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBGaWxlU2F2ZXJTZXJ2aWNlIHtcbiAgZ2V0IGlzRmlsZVNhdmVyU3VwcG9ydGVkKCk6IGJvb2xlYW4ge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gISFuZXcgQmxvYigpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBnZW5UeXBlKGZpbGVOYW1lPzogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBpZiAoIWZpbGVOYW1lIHx8IGZpbGVOYW1lLmxhc3RJbmRleE9mKCcuJykgPT09IC0xKSB7XG4gICAgICByZXR1cm4gJ3RleHQvcGxhaW4nO1xuICAgIH1cbiAgICBjb25zdCB0eXBlID0gZmlsZU5hbWUuc3Vic3RyKGZpbGVOYW1lLmxhc3RJbmRleE9mKCcuJykgKyAxKTtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ3R4dCc6XG4gICAgICAgIHJldHVybiAndGV4dC9wbGFpbic7XG4gICAgICBjYXNlICd4bWwnOlxuICAgICAgY2FzZSAnaHRtbCc6XG4gICAgICAgIHJldHVybiBgdGV4dC8ke3R5cGV9YDtcbiAgICAgIGNhc2UgJ2pzb24nOlxuICAgICAgICByZXR1cm4gJ29jdGV0L3N0cmVhbSc7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gYGFwcGxpY2F0aW9uLyR7dHlwZX1gO1xuICAgIH1cbiAgfVxuXG4gIHNhdmUoYmxvYjogQmxvYiwgZmlsZU5hbWU/OiBzdHJpbmcsIGZpbHRUeXBlPzogc3RyaW5nLCBvcHRpb24/OiBGaWxlU2F2ZXJPcHRpb25zKTogdm9pZCB7XG4gICAgaWYgKCFibG9iKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0RhdGEgYXJndW1lbnQgc2hvdWxkIGJlIGEgYmxvYiBpbnN0YW5jZScpO1xuICAgIH1cblxuICAgIGNvbnN0IGZpbGUgPSBuZXcgQmxvYihbYmxvYl0sIHsgdHlwZTogZmlsdFR5cGUgfHwgYmxvYi50eXBlIHx8IHRoaXMuZ2VuVHlwZShmaWxlTmFtZSkgfSk7XG4gICAgc2F2ZUFzKGZpbGUsIGRlY29kZVVSSShmaWxlTmFtZSB8fCAnZG93bmxvYWQnKSwgb3B0aW9uKTtcbiAgfVxuXG4gIHNhdmVUZXh0KHR4dDogc3RyaW5nLCBmaWxlTmFtZT86IHN0cmluZywgb3B0aW9uPzogRmlsZVNhdmVyT3B0aW9ucyk6IHZvaWQge1xuICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbdHh0XSk7XG4gICAgdGhpcy5zYXZlKGJsb2IsIGZpbGVOYW1lLCBudWxsLCBvcHRpb24pO1xuICB9XG59XG4iXX0=