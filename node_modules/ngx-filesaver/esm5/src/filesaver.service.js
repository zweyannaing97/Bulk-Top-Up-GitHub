var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Injectable } from '@angular/core';
import { saveAs } from 'file-saver';
import * as i0 from "@angular/core";
var FileSaverService = /** @class */ (function () {
    function FileSaverService() {
    }
    Object.defineProperty(FileSaverService.prototype, "isFileSaverSupported", {
        get: function () {
            try {
                return !!new Blob();
            }
            catch (e) {
                return false;
            }
        },
        enumerable: true,
        configurable: true
    });
    FileSaverService.prototype.genType = function (fileName) {
        if (!fileName || fileName.lastIndexOf('.') === -1) {
            return 'text/plain';
        }
        var type = fileName.substr(fileName.lastIndexOf('.') + 1);
        switch (type) {
            case 'txt':
                return 'text/plain';
            case 'xml':
            case 'html':
                return "text/" + type;
            case 'json':
                return 'octet/stream';
            default:
                return "application/" + type;
        }
    };
    FileSaverService.prototype.save = function (blob, fileName, filtType, option) {
        if (!blob) {
            throw new Error('Data argument should be a blob instance');
        }
        var file = new Blob([blob], { type: filtType || blob.type || this.genType(fileName) });
        saveAs(file, decodeURI(fileName || 'download'), option);
    };
    FileSaverService.prototype.saveText = function (txt, fileName, option) {
        var blob = new Blob([txt]);
        this.save(blob, fileName, null, option);
    };
    FileSaverService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function FileSaverService_Factory() { return new FileSaverService(); }, token: FileSaverService, providedIn: "root" });
    FileSaverService = __decorate([
        Injectable({ providedIn: 'root' })
    ], FileSaverService);
    return FileSaverService;
}());
export { FileSaverService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXNhdmVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZmlsZXNhdmVyLyIsInNvdXJjZXMiOlsic3JjL2ZpbGVzYXZlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE1BQU0sRUFBb0IsTUFBTSxZQUFZLENBQUM7O0FBR3REO0lBQUE7S0F3Q0M7SUF2Q0Msc0JBQUksa0RBQW9CO2FBQXhCO1lBQ0UsSUFBSTtnQkFDRixPQUFPLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDO2FBQ3JCO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1YsT0FBTyxLQUFLLENBQUM7YUFDZDtRQUNILENBQUM7OztPQUFBO0lBRUQsa0NBQU8sR0FBUCxVQUFRLFFBQWlCO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtZQUNqRCxPQUFPLFlBQVksQ0FBQztTQUNyQjtRQUNELElBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM1RCxRQUFRLElBQUksRUFBRTtZQUNaLEtBQUssS0FBSztnQkFDUixPQUFPLFlBQVksQ0FBQztZQUN0QixLQUFLLEtBQUssQ0FBQztZQUNYLEtBQUssTUFBTTtnQkFDVCxPQUFPLFVBQVEsSUFBTSxDQUFDO1lBQ3hCLEtBQUssTUFBTTtnQkFDVCxPQUFPLGNBQWMsQ0FBQztZQUN4QjtnQkFDRSxPQUFPLGlCQUFlLElBQU0sQ0FBQztTQUNoQztJQUNILENBQUM7SUFFRCwrQkFBSSxHQUFKLFVBQUssSUFBVSxFQUFFLFFBQWlCLEVBQUUsUUFBaUIsRUFBRSxNQUF5QjtRQUM5RSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1QsTUFBTSxJQUFJLEtBQUssQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDO1NBQzVEO1FBRUQsSUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6RixNQUFNLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxRQUFRLElBQUksVUFBVSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVELG1DQUFRLEdBQVIsVUFBUyxHQUFXLEVBQUUsUUFBaUIsRUFBRSxNQUF5QjtRQUNoRSxJQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMxQyxDQUFDOztJQXZDVSxnQkFBZ0I7UUFENUIsVUFBVSxDQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxDQUFDO09BQ3RCLGdCQUFnQixDQXdDNUI7MkJBNUNEO0NBNENDLEFBeENELElBd0NDO1NBeENZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHNhdmVBcywgRmlsZVNhdmVyT3B0aW9ucyB9IGZyb20gJ2ZpbGUtc2F2ZXInO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIEZpbGVTYXZlclNlcnZpY2Uge1xuICBnZXQgaXNGaWxlU2F2ZXJTdXBwb3J0ZWQoKTogYm9vbGVhbiB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAhIW5ldyBCbG9iKCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGdlblR5cGUoZmlsZU5hbWU/OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmICghZmlsZU5hbWUgfHwgZmlsZU5hbWUubGFzdEluZGV4T2YoJy4nKSA9PT0gLTEpIHtcbiAgICAgIHJldHVybiAndGV4dC9wbGFpbic7XG4gICAgfVxuICAgIGNvbnN0IHR5cGUgPSBmaWxlTmFtZS5zdWJzdHIoZmlsZU5hbWUubGFzdEluZGV4T2YoJy4nKSArIDEpO1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSAndHh0JzpcbiAgICAgICAgcmV0dXJuICd0ZXh0L3BsYWluJztcbiAgICAgIGNhc2UgJ3htbCc6XG4gICAgICBjYXNlICdodG1sJzpcbiAgICAgICAgcmV0dXJuIGB0ZXh0LyR7dHlwZX1gO1xuICAgICAgY2FzZSAnanNvbic6XG4gICAgICAgIHJldHVybiAnb2N0ZXQvc3RyZWFtJztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBgYXBwbGljYXRpb24vJHt0eXBlfWA7XG4gICAgfVxuICB9XG5cbiAgc2F2ZShibG9iOiBCbG9iLCBmaWxlTmFtZT86IHN0cmluZywgZmlsdFR5cGU/OiBzdHJpbmcsIG9wdGlvbj86IEZpbGVTYXZlck9wdGlvbnMpOiB2b2lkIHtcbiAgICBpZiAoIWJsb2IpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRGF0YSBhcmd1bWVudCBzaG91bGQgYmUgYSBibG9iIGluc3RhbmNlJyk7XG4gICAgfVxuXG4gICAgY29uc3QgZmlsZSA9IG5ldyBCbG9iKFtibG9iXSwgeyB0eXBlOiBmaWx0VHlwZSB8fCBibG9iLnR5cGUgfHwgdGhpcy5nZW5UeXBlKGZpbGVOYW1lKSB9KTtcbiAgICBzYXZlQXMoZmlsZSwgZGVjb2RlVVJJKGZpbGVOYW1lIHx8ICdkb3dubG9hZCcpLCBvcHRpb24pO1xuICB9XG5cbiAgc2F2ZVRleHQodHh0OiBzdHJpbmcsIGZpbGVOYW1lPzogc3RyaW5nLCBvcHRpb24/OiBGaWxlU2F2ZXJPcHRpb25zKTogdm9pZCB7XG4gICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFt0eHRdKTtcbiAgICB0aGlzLnNhdmUoYmxvYiwgZmlsZU5hbWUsIG51bGwsIG9wdGlvbik7XG4gIH1cbn1cbiJdfQ==